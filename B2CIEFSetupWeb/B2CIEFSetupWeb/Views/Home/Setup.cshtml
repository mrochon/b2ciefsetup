@model SetupState
@{
    ViewData["Title"] = "Setup results";
}

    <div class="text-center">
        <h1 class="display-4">Setup results</h1>

        <table class="table table-bordered table-responsive table-hover">
            <tr>
                <th>Name</th>
                <th>Id</th>
                <th>Status</th>
            </tr>
            @foreach (var d in Model.Items)
            {
                <tr>
                    <td>@d.Name</td>
                    <td>@d.Id</td>
                    <td>@d.Status</td>
                </tr>
            }
        </table>
     </div>
    <div class="text-left">
        <p class="text-justify">The above ProxyIdentityExperienceFramework's permissions to call the IdentityExperienceFramework resource reqires admin consent before 
        they can be used by IEF policies.
        </p>
        <p><b>If the status of either application shows up as 'New' above, you MUST provide this consent by <a href=@Model.ConsentUrl>requesting an OIDC signin to the client app.</a></b>.
            You will be asked to sign in (make sure to use an admin account) and agree to the consent. Afterwards you will be then redirected to a non-existent page - you can ignore that. If you see an error message that the application is not registered,
            press the back button in the browser and wait for half-a-minute - application registration may not be immediately visible to this process. 
        </p>

        <p>The
        <a href="https://github.com/mrochon/IEFPolicies"> PowerShell policy admin tool</a>, Import-IefPolicies command will automatically detect
        the above settings and update your policies prior to load.</p>
    </div>
